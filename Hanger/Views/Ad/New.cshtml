@model Hanger.Models.Ad

@{
    ViewBag.Title = "New";
}

<h2>New</h2>

@using (Html.BeginForm())
{    if (Session["LogedUserID"] != null)
    {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @if (Session["LogedUserID"] != null)
        {
            <small>
                Hello @(((Session["LogedUserID"] as Hanger.Models.User).Profil_name) )

            </small>
        }
        <hr />
        @Html.ValidationSummary(true)
    

        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header"><span class="glyphicon glyphicon-camera"></span> Add picture</h1>
                @using (Html.BeginForm("SubmitPhoto", "Wall", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="row">
                        <input type="file" name="file" class="btn btn-default" />
                    </div>
                    <div class="row">
                        <input type="submit" value="Submit" class="btn btn-default" />
                        <img id="loader" src="~/pic/ajax-loader.gif" style="display:none;" />
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price)
                @Html.ValidationMessageFor(model => model.Price)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2" for="SizeId">Rozmiar</label>
            <div class="col-md-10">
                @Html.DropDownList("SizeId", String.Empty)
                @Html.ValidationMessageFor(model => model.SizeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ColorId, "ColorId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ColorId", String.Empty)
                @Html.ValidationMessageFor(model => model.ColorId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubcategoryId, "SubcategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SubcategoryId", String.Empty)
                @Html.ValidationMessageFor(model => model.SubcategoryId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConditionId, "ConditionId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ConditionId", String.Empty)
                @Html.ValidationMessageFor(model => model.ConditionId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Swap, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Swap)
                @Html.ValidationMessageFor(model => model.Swap)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrandId, "BrandId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BrandId", String.Empty)
                @Html.ValidationMessageFor(model => model.BrandId)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
                }
                else
                {
                   
                        <div class="col-xs-6">
                         Nie jesteś zalogowany
                        <p class="lead">Nie masz konta?<br/><span class="text-success">ZAREJESTRUJ SIĘ</span></p> 
                        <ul class="list-unstyled" style="line-height: 2">
                            <li><span class="fa fa-check text-success"></span> Dodawaj nieskończoną ilość ogłoszeń</li>
                            <li><span class="fa fa-check text-success"></span> Wymieniaj się z innymi ubraniami</li>     
                            <li><span class="fa fa-check text-success"></span> Inspiruj innych swoim stylem</li>
                        </ul> 
                        <p><a href = "/Login/Login" class="btn btn-info btn-block">Zarejestruj się już teraz!</a></p>
                    </div>

    }
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
